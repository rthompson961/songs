<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Song Contest{% endblock %}</title>
        {% block stylesheets %}
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
        <link rel="stylesheet" href="style.css">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
        {% endblock %}
    </head>
    <body>
        <div class="container">

            <div class="row">
                <div class="col">
                    <div class="navbar bg-dark rounded-lg mt-2 mb-5">
                        <h1 class="text-white">Song Contest</h1>
                    </div>
                </div>
            </div>

        {% block body %}{% endblock %}

        </div>
        {% block javascripts %}
        <script src="https://code.jquery.com/jquery-3.5.1.min.js" type></script>
        <script>
            var SongApp = {
                initialize: function($table) {
                    $table.find('.js-vote-delete').on(
                        'click',
                        this.deleteVote.bind(this)
                    );
                },

                deleteVote: function(e) {
                    e.preventDefault();

                    // change icon to red spinner
                    var $link = $(e.currentTarget);
                    $link.addClass('text-danger');
                    $link.find('span')
                        .removeClass('fa-trash-alt')
                        .addClass('fa-spinner')
                        .addClass('fa-spin');

                    $.ajax({
                        url: $link.data('url'),
                        context: this,
                        method: 'DELETE',
                        success: function() {
                            $link.closest('tr').fadeOut();
                            this.updateCount($link.data('song'), $link.data('quantity'));
                            this.sortCount();
                        }
                    });
                },

                updateCount: function(id, quantity) {
                    // count table row that contains the deleted vote
                    var $row = $('.js-count-row-' + id);
                    // cell that contains the count value
                    var $cell = $row.children().last();
                    // vote count minus the deleted votes
                    var newCount = $cell.html() - quantity;

                    // remove count row if zero votes or update the cell
                    if (newCount == 0) {
                        $row.fadeOut();
                    } else {
                        $cell.html(newCount);
                    }
                },

                sortCount: function() {
                    var $table = $('.js-count-table tbody');
                    var $rows = $table.find('tr');

                    // sort rows by count total in descending order
                    $rows.sort(function(a, b) {
                        return $(b).children().last().html() - $(a).children().last().html();
                    });

                    // update count table rows to updated order
                    $.each($rows, function(index, $row) {
                        $table.append($row);
                    });
                }
            }

            $(document).ready(function() {
                SongApp.initialize($('.js-vote-table tbody'));
            });
        </script>
        {% endblock %}
    </body>
</html>
